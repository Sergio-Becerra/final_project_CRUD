AWSTemplateFormatVersion: "2010-09-09"
Description: This is the part 1 of the crud app deployment, deploying all network related

Resources:
# ---------- VPC ----------------
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.42.0/25
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: clip_crud_project_sabc_vpc

# ---------- INTERNET GATEWAY ----------------
  
  CrudappIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: clip_crud_project_sabc_igw
        
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:  !Ref VPC
      InternetGatewayId: !Ref CrudappIGW

# ---------- PRIVATE RT AND NAT GATEWAY ----------------
  CrudNat:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NATGatewayEIP.AllocationId
      SubnetId: !Ref PublicSubA
      Tags:
        - Key: Name
          Value: clip-crud-project-sabc-NAT-Gateway
  
  NATGatewayEIP: 
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  
  PrivateRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: clip_crud_project_sabc_private_rt
  
  NatRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRT
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref CrudNat

# ---------- ROUTE TABLE PUBLIC ----------------

  PublicRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  !Ref VPC
      Tags:
        - Key: Name
          Value: clip_crud_project_sabc_public
  
  InternetRoute:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId: !Ref PublicRT
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId: !Ref CrudappIGW

# ---------- PUBLIC SUBNETS----------------

  PublicSubA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0,Fn::GetAZs: !Ref  AWS::Region]
      VpcId:  !Ref VPC
      CidrBlock: 10.0.42.0/28
      Tags:
        - Key: Name
          Value: clip-crud-project-sabc-public-sub-a
        - Key: Public
          Value: true

  PublicSubB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1,Fn::GetAZs: !Ref  AWS::Region]
      VpcId:  !Ref VPC
      CidrBlock: 10.0.42.16/28
      Tags:
        - Key: Name
          Value: clip-crud-project-sabc-public-sub-b
        - Key: Public
          Value: true

  PublicSubRTASSOA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubA
      RouteTableId: !Ref PublicRT
  
  PublicSubRTASSOB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubB
      RouteTableId: !Ref PublicRT
    
# ************************* DATABASE ***********************************
  DBSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "SgForDB" 
      GroupDescription: " Security group for database of the project crudapp"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref APPSG
      Tags:
        - Key: Name
          Value: clip_crud_project_sabc_dbsg

# ---------- DB SUBNET-A ----------------
# TODO:
# Add NAT and routetable association

  DBSubA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0,Fn::GetAZs: !Ref  AWS::Region]
      VpcId: !Ref VPC
      CidrBlock: 10.0.42.32/28
      Tags:
        - Key: Name
          Value: clip_crud_project_sabc_db_sub_a
        - Key: Public
          Value: false
  
  DBSubARTASSO:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref DBSubA
      RouteTableId: !Ref PrivateRT
  
# ----------  DB SUBNET-B ----------------
# TODO:
# Add NAT and routetable association

  DBSubB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1,Fn::GetAZs: !Ref  AWS::Region]
      VpcId: !Ref VPC
      CidrBlock: 10.0.42.48/28
      Tags:
        - Key: Name
          Value: clip_crud_project_sabc_db_sub_b
        - Key: Public
          Value: false
          
  DBSubBRTASSO:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref DBSubB
      RouteTableId: !Ref PrivateRT

# ************************* APP ***********************************
  APPSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: InstancesSG
      GroupDescription: SG for cluster instances
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0
        
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 187.198.144.219/32
          
      Tags:
        - Key: Name
          Value: clip_crud_project_sabc_dbsg
# ---------- APP SUBNET-A ----------------

  AppSubA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0,Fn::GetAZs: !Ref  AWS::Region]
      VpcId: !Ref VPC
      CidrBlock: 10.0.42.64/27
      Tags:
        - Key: Name
          Value: clip_crud_project_sabc_app_sub_a
        - Key: Public
          Value: false
  
  AppSubARTASSO:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref AppSubA
      RouteTableId: !Ref PrivateRT

# ----------  APP SUBNET-B ----------------

  AppSubB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1,Fn::GetAZs: !Ref  AWS::Region]
      VpcId: !Ref VPC
      CidrBlock: 10.0.42.96/27
      Tags:
        - Key: Name
          Value: clip_crud_project_sabc_app_sub_b
        - Key: Public
          Value: false

  AppSubBRTASSO:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref AppSubB
      RouteTableId: !Ref PrivateRT

# ************************* ENDPOINTS ***********************************
# ----------  ECR ENDPOINTS ----------------

  ECSInterfaceEndpoint1:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcEndpointType: Interface
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ecs-agent'
      VpcId: !Ref VPC
      SubnetIds: 
        - !Ref AppSubA
        - !Ref AppSubB
      SecurityGroupIds:
        - !Ref APPSG
  
  ECSInterfaceEndpoint2:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      PrivateDnsEnabled: true
      VpcEndpointType: Interface
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ecs-telemetry'
      VpcId: !Ref VPC
      SubnetIds: 
        - !Ref AppSubA
        - !Ref AppSubB
      SecurityGroupIds:
        - !Ref APPSG
        
  ECSInterfaceEndpoint3:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      PrivateDnsEnabled: true
      VpcEndpointType: Interface
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ecs'
      VpcId: !Ref VPC
      SubnetIds: 
        - !Ref AppSubA
        - !Ref AppSubB
      SecurityGroupIds:
        - !Ref APPSG

# ----------  ECR ENDPOINTS ----------------

  ECRInterfaceEndpoint1:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcEndpointType: Interface
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ecr.api'
      VpcId: !Ref VPC
      SubnetIds: 
        - !Ref AppSubA
        - !Ref AppSubB
      SecurityGroupIds:
        - !Ref APPSG
  
  ECRInterfaceEndpoint2:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      PrivateDnsEnabled: true
      VpcEndpointType: Interface
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ecr.dkr'
      VpcId: !Ref VPC
      SubnetIds: 
        - !Ref AppSubA
        - !Ref AppSubB
      SecurityGroupIds:
        - !Ref APPSG

Outputs:

  VPCE:
    Description: Vpc for the CRUD project 
    Value:  !Ref VPC
    Export: 
      Name: CrudVPC

  DBSGE:
    Description: Export for security group for DB 
    Value: !Ref DBSG
    Export: 
      Name: DBSG

  DBSubAE:
    Description: DB Subnet located on the fist AZ of the region
    Value: !Ref AppSubA
    Export: 
      Name: DBSubnetA
  
  DBSubBE:
    Description: DB Subnet located on the second AZ of the region
    Value: !Ref AppSubB
    Export: 
      Name: DBSubnetB

  APPSGE:
    Description: Export for security group for APP 
    Value: !Ref APPSG
    Export: 
      Name: APPSG

  AppSubAE:
    Description: APP Subnet located on the fist AZ of the region
    Value: !Ref AppSubA
    Export: 
      Name: AppSubnetA
  
  AppSubBE:
    Description: APP Subnet located on the second AZ of the region
    Value: !Ref AppSubB
    Export: 
      Name: AppSubnetB

  PublicSubAE:
    Description: Public Subnet located on the fist AZ of the region
    Value: !Ref PublicSubA
    Export: 
      Name: PublicSubA
  
  PublicSubBE:
    Description: Public Subnet located on the second AZ of the region
    Value: !Ref PublicSubB
    Export: 
      Name: PublicSubB